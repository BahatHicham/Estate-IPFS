// import localFont from "next/font/local";
import "./globals.css";
import 'bootstrap/dist/css/bootstrap.min.css';
import Image from "next/image";
// import '../styles/globals.css';


// import '../styles/custom.css';
// import '../styles/heroes.css';
import 'sf-font';
import Navbar from "./pages/navbar";

// export default function App({Component, pageprops}){
//   return <Component {...pageprops} />
// }

// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });
// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({ children }) {
  return (
    <html lang="en"> 
      {/* <div>
         <header className="d-flex flex-wrap align-items-start justify-content-center justify-content-md-between">
          <Image 
          className='col-md-1 px-2' 
          src="/images/pinatalogo.svg" 
              width={160}
              height={80} 
              alt='pinatalogo' />
          <a
          href="/"
            className="d-flex align-items-center col-md-2 mb-2 mb-md-0 text-dark text-decoration-none" 
          ></a>
          <ul className="nav col-10 col-md-auto mb-2 justify-content-center mb-md-1">
            <li>
            <a href="/" className="nav-link px-4 link-dark" style={{fontFamily : 'SF Pro Display' , fontWeight : "1000"}}>
              Listed
              </a>
            </li>
            <li>
            <a href="list" className="nav-link px-4 link-dark" style={{fontFamily : 'SF Pro Display' , fontWeight : "1000"}}>
              Liste My Property !
              </a>
            </li>
          </ul>
      </header>
    </div> */}
     
     <body> 
      <Navbar/>
        {children}
      </body> 
    </html>
  );
}

        // className={`${geistSans.variable} ${geistMono.variable} antialiased`}